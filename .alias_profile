#!/bin/bash

export EDITOR=vim
export PATH="$HOME/.bin:$PATH"

# Env
if [[ "$PROJECT_HOME" == "" ]] then
    echo "Missing Environment Variable `PROJECT_HOME`"
fi

# Trip
if [[ -d /opt/settings ]] then
    TRIP_ENVS=(`ls /opt/settings | grep -E '\w+\.\w+\.\w+' | awk -F. '{print $1}'`)
    for TRIP_ENV in "${TRIP_ENVS[@]}"
    do
        eval "alias env-${TRIP_ENV}=\"ln -s -f /opt/settings/${TRIP_ENV}.server.properties /opt/settings/server.properties\""
    done
fi

j(){
    sshpass -p "`bw get password http://home.ctripcorp.com` `bw get totp http://home.ctripcorp.com`" ssh yy_gong@jumpserver.ops.ctripcorp.com
}

jj(){
    sshpass -p "`bw get password http://home.ctripcorp.com` `bw get totp http://home.ctripcorp.com`" ssh yy_gong@ssh.fws.jumpserver.sys.ctripcorp.com
}

# Java
mvn-version(){
    mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$1
}


# Kubernetes
export UNPROTECTED_CONTEXT=default:rancher-desktop:docker-desktop:minikube:orbstack
export PATH="$HOME/.krew/bin:$PATH"
alias kk=". kube-cluster"
alias kc="kubectl config use-context"
alias kn="kube-namespace"
alias kx="kubectl exec"
alias kg="kubectl get"
alias ke="kubectl edit"
alias kd="kubectl delete"

# Misc
alias bb="brew update && brew outdated && brew upgrade --greedy && brew cleanup --prune=all"
alias quarantine="xattr -rd com.apple.quarantine"
alias mysql="mysql --default-character-set utf8mb4"
alias x86="arch -x86_64"
alias lo0alias="sudo ifconfig lo0 alias 192.168.88.88"
alias code-c="code --profile C"
alias code-java="code --profile Java"
alias code-golang="code --profile Golang"
alias code-node="code --profile Node"
alias exifsync="exiftool -api GeoMaxIntSecs=86400 -api GeoMaxExtSecs=86400 -overwrite_original -geosync=+08:00:00"

tomcat () {
    $TOMCAT_HOME/bin/catalina.sh $@
}

tomcat-undeploy () {
    echo "Deleting WARs in webapps:"
    ls $TOMCAT_HOME/webapps/
    rm -rf $TOMCAT_HOME/webapps/*
}

tomcat-deploy () {
    FROM="."
    TO=""

    if [[ -n "$1"  && -n "$2" ]]; then
        FROM="$1"
        TO="$2"
    elif [[ -n "$1" ]]; then
        TO="$1"
    fi

    WAR=$(find "$FROM/target" -name "*.war" -type f 2>/dev/null | head -n 1)
    if [[ -z "$WAR" ]]; then
        echo "No WAR file found in $FROM"
        return 1
    fi

    if [[ -z "$TO" ]]; then
        echo "Deploying WAR from $WAR to $TOMCAT_HOME/webapps/"
        cp $WAR $TOMCAT_HOME/webapps/
    else
        echo "Deploying WAR from $WAR to $TOMCAT_HOME/webapps/$TO.war"
        cp $WAR $TOMCAT_HOME/webapps/$TO.war
    fi
    echo ""
    echo "WARs in webapps:"
    ls $TOMCAT_HOME/webapps/
}

if command -v bat &> /dev/null
then
    alias cat="bat --paging=never"
fi

if command -v vim &> /dev/null
then
    alias vi=vim
fi

# Env
_set_env(){
    _current_dir=$(pwd)
    while [ "$_current_dir" != "/" ]; do
        source "$_current_dir/.env" 2> /dev/null && break
        _current_dir=$(dirname "$_current_dir")
    done
}
_set_env
add-zsh-hook chpwd _set_env
