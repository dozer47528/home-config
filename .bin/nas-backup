#!/usr/bin/env python3
import os
import getopt
import subprocess
import sys
import re
from datetime import datetime, timedelta

if __name__ == "__main__":

    target_file_pattern = re.compile(r"HOME\.hbk/Pool/\d+/\d+/\d+.bucket.\d")
    help_str = """Usage: nas-backup -c <class> -b <before> -a <after> <file>
  -c, --class <class>      Filter by target storege classes, split with ","
                           (STANDARD | REDUCED_REDUNDANCY | STANDARD_IA | ONE-ZONE_IA | INTELLIGENT_TIERING | GLACIER | DEEP_ARCHIVE | GLACIER_IR)
  -b, --before <before>    Only include data before this date
  -a, --after <after>      Only include data after this date

Examples:
  nas-backup -c STANDARD_IA -b 2020-01-01 list.csv # List files for DEEP_ARCHIVE
  nas-backup -c DEEP_ARCHIVE -b 2020-01-01 -a 2021-01-01 list.csv # List files for restore from archieve
"""
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hc:b:a:",
                                   ["help", "class=", "before=", "after="])
        target_classes = []
        before_date = None
        after_date = None

        if len(args) < 1:
            print(help_str)
            sys.exit(1)

        for opt, arg in opts:
            if opt == '-h':
                print(help_str)
                sys.exit()
            elif opt in ("-c", "--class"):
                target_classes = arg.split(",")
            elif opt in ("-b", "--before"):
                before_date = datetime.strptime(arg, '%Y-%m-%d')
            elif opt in ("-a", "--after"):
                after_date = datetime.strptime(arg, '%Y-%m-%d')

        with open(args[0], "r") as data:
            for line in data.readlines():
                cols = [c.strip("\"") for c in line.strip("\n").split(",")]
                bucket = cols[0]
                key = cols[1]
                size = int(cols[2])
                modified = datetime.strptime(cols[3], '%Y-%m-%dT%H:%M:%S.%fZ')
                storege_class = cols[4]

                if not target_file_pattern.match(key):
                    continue
                
                if target_classes and storege_class not in target_classes:
                    continue
                
                if before_date and modified > before_date:
                    continue
                
                if after_date and modified < after_date:
                    continue

                print(key)

    except getopt.GetoptError:
        print(help_str)
        sys.exit(2)
