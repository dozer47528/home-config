#!/bin/bash

if [[ -z $1 ]]; then
    echo "Available clusters"
    echo "------------------"
    echo "default"
    echo `ls -p ~/.kube/clusters/ | grep -v /`
    echo `kubectl config get-contexts --kubeconfig ~/.kube/clusters/ocid/trip-testing.config -o name`
    echo `kubectl config get-contexts --kubeconfig ~/.kube/clusters/ocid/trip-prod.config -o name`
    return
fi

uuid=$(uuidgen)

trip_testing_clusters=(`kubectl config get-contexts --kubeconfig ~/.kube/clusters/ocid/trip-testing.config -o name`)
trip_prod_clusters=(`kubectl config get-contexts --kubeconfig ~/.kube/clusters/ocid/trip-prod.config -o name`)

mkdir -p ~/.tmp/kube

if [[ $1 == "default" ]]; then
    cp ${HOME}/.kube/config ~/.tmp/kube/${uuid}
elif [[ $trip_testing_clusters == *$1* ]]; then
    cp ${HOME}/.kube/clusters/ocid/trip-testing.config ~/.tmp/kube/${uuid}
    kubectl config use-context --kubeconfig ~/.tmp/kube/${uuid} $1
elif [[ $trip_prod_clusters == *$1* ]]; then
    cp ${HOME}/.kube/clusters/ocid/trip-prod.config ~/.tmp/kube/${uuid}
    kubectl config use-context --kubeconfig ~/.tmp/kube/${uuid} $1
else
    cp ${HOME}/.kube/clusters/$1 ~/.tmp/kube/${uuid}
fi

chmod 600 ${HOME}/.tmp/kube/${uuid}

export KUBECONFIG=${HOME}/.tmp/kube/${uuid}